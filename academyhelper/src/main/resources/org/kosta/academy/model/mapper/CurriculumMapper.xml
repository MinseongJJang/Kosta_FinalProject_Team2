<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="org.kosta.academy.model.mapper.CurriculumMapper">
	<insert id="registerCurriculum" parameterType="curriculumVO">
		<selectKey keyProperty="curNo" resultType="string"
			order="BEFORE">
			select
			curriculum_seq.nextval from dual
		</selectKey>
		insert into
		curriculum(cur_no,aca_no,cur_name,limit_mem,cur_content,cur_lecturer,cur_textbook,cur_main_pic)
		values(#{curNo},#{academyVO.acaNo},#{curName},#{limitMem},#{curContent},#{curLecturer},#{curTextbook},#{curMainPic})
	</insert>
	<update id="updateCurriculum" parameterType="curriculumVO">
		update curriculum
		set
		cur_name=#{curName}, limit_mem=#{limitMem},cur_content=#{curContent},cur_lecturer=#{curLecturer},cur_textbook=#{curTextbook},cur_main_pic=#{curMainPic}
		where cur_no=#{curNo}
	</update>
	<delete id="deleteCurriculum">
		delete from Curriculum where cur_no=#{value}
	</delete>
	<select id="getTotalCurriculumCount" resultType="int">
		select count(*)
		from curriculum where aca_no=#{value}
	</select>
	<resultMap type="curriculumVO" id="curriculumRM">
		<result property="academyVO.acaNo" column="aca_no" />
		<result property="academyVO.acaName" column="aca_name" />

	</resultMap>
	<select id="listCurriculum" resultMap="curriculumRM"
		parameterType="map">
		SELECT
		c.cur_no,c.cur_name,c.limit_mem,c.cur_content,c.cur_lecturer,c.cur_textbook,c.cur_main_pic,c.aca_no,a.aca_name
		FROM(
		SELECT row_number() over(order by cur_no desc) as
		rnum,cur_no,cur_name,limit_mem,cur_content,cur_lecturer,cur_textbook,cur_main_pic,aca_no
		FROM curriculum
		) c,academy a where c.aca_no=a.aca_no and
		a.aca_no=#{acaNo} and rnum between #{start} and #{end}
		order by
		c.cur_no desc
	</select>
	<select id="allListCurriculum" resultType="curriculumVO" parameterType="string"> 
		select * from curriculum where aca_no=#{acaNo}
	</select>
	<select id="listCurriculumAsAcademy" resultType="curriculumVO" parameterType="string">
		select * from curriculum where aca_no=#{acaNo}
	</select>
	<select id="detailCurriculum" resultMap="curriculumRM">
		select
		c.cur_no,c.cur_name,c.cur_main_pic,c.limit_mem,c.cur_content,c.cur_lecturer,c.cur_textbook,c.aca_no,a.aca_name
		from curriculum
		c,academy a where
		c.aca_no=a.aca_no and
		c.cur_no=#{value}
	</select>
	
	<select id="getCurriculumList" parameterType="string" resultMap="curriculumRM">
		select c.cur_no,c.cur_name,a.aca_no,a.aca_name from curriculum c , academy a 
		where c.aca_no = a.aca_no and
		c.aca_no = #{value}
	</select>
	
	<insert id="registerCurriculumFile" parameterType="CurriculumAttachFileVO" >
		insert into cur_attach_file(cur_att_no,cur_filepath,cur_no)
		values(cur_attach_file_seq.nextval,#{curriculumFilepath},#{curriculumVO.curNo})
	</insert>
	<update id="updateCurriculumFile" parameterType="CurriculumAttachFileVO">
		update cur_attach_file
		set
		cur_filepath=#{curriculumFilepath} where cur_att_no=#{curAttNo}
	</update>
	
	<resultMap type="CurriculumAttachFileVO" id="curriculumAttachFileRM">
		<result property="curriculumVO.curNo" column="cur_no" />
	</resultMap>
	<select id="listCurriculumFile" parameterType="CurriculumAttachFileVO" resultMap="curriculumAttachFileRM">
		select cur_att_no,cur_filepath,cur_no from 
		cur_attach_file where cur_no = #{curriculumVO.curNo}
	</select>
	<resultMap type="curriculumVO" id="bestCurriculumRM">
		<result property="academyVO.acaNo" column="aca_no"/>
		<result property="academyVO.acaName" column="aca_name"/>
	</resultMap>
	<select id="bestCurriculumList" resultMap="bestCurriculumRM">
		select RANK() OVER   
    	(ORDER BY satis DESC) AS Rank,rr.cur_no,rr.satis,cc.cur_lecturer,cc.cur_textbook,cc.cur_name,cc.limit_mem,cc.cur_main_pic,aa.aca_name,aa.aca_no from(
		select  a.cur_no,round((AVG(CUR_SATIS)+AVG(amenities_satis)+AVG(lecturer_satis)+AVG(emp_links_satis)+AVG(traffic_satis))/5,2) as satis
		from aca_cur_satisfaction s, ACA_REVIEW_POST a where a.ACA_REV_NO=s.ACA_REV_NO
		GROUP BY a.cur_no HAVING count(*)<![CDATA[<]]>16) rr, curriculum cc, academy aa where cc.cur_no=rr.cur_no and aa.ACA_NO=cc.ACA_NO
	</select>
</mapper>