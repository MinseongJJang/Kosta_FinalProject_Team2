<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.academy.model.mapper.AcademyMapper">
	<insert id="registerAcademy" parameterType="academyVO">
		<selectKey keyProperty="acaNo" resultType="string" order="BEFORE">
			select
			academy_seq.nextval from dual
		</selectKey>
			insert into academy(aca_no,aca_name,aca_addr,aca_tel,usr_id,aca_main_pic,aca_content) values(#{acaNo}, #{acaName}, #{acaAddr}, #{acaTel}, #{userVO.usrId},#{acaMainPic},#{acaContent})
	</insert>
	<resultMap type="academyVO" id="usrIdRM">
		<result property="userVO.usrId" column="usr_id" />
		<result property="userVO.nickname" column="nickname" />
	</resultMap>
	<select id="listAcademy" resultMap="usrIdRM"  parameterType="pagingBean">
		select a.aca_no, a.aca_name, a.aca_addr, a.aca_tel, u.usr_id, u.nickname, a.aca_main_pic
		from(select row_number() over(order by aca_no desc) as rnum, aca_no, aca_name, aca_addr, aca_tel, usr_id,aca_main_pic from academy) a, users u
		where a.usr_id = u.usr_id  and rnum between #{startRowNumber} and #{endRowNumber} order by aca_no desc
	</select>
	<select id="allListAcademy" resultType="academyVO">
		select * from academy
	</select>
	<select id="getTotalListAcaCount" resultType="int">
		select count(*) from academy
	</select>
	<resultMap type="academyVO" id="detailRM">
		<result property="userVO.usrId" column="usr_id" />
		<result property="userVO.usrName" column="usr_name" />
		<result property="userVO.usrAddr" column="usr_addr" />
		<result property="userVO.nickname" column="nickname" />
		<result property="userVO.usrRegdate" column="usr_regdate" />
		<result property="userVO.usrEmail" column="usr_email" />
		<result property="userVO.usrTel" column="usr_tel" />
	</resultMap>
	<select id="detailAcademy" resultMap="detailRM" parameterType="string">
		select  a.aca_no, a.aca_name, a.aca_addr, a.aca_tel, a.aca_main_pic, a.aca_content,
		u.usr_id, u.usr_name, u.usr_addr, u.nickname, u.usr_regdate, u.usr_email, u.usr_tel from academy a, users u 
		where a.usr_id = u.usr_id and a.aca_no = #{value}
	</select>
	<update id="updateAcademy" parameterType="academyVO">
		update academy 
		set aca_name = #{acaName}, aca_addr = #{acaAddr}, aca_tel = #{acaTel}, 
		aca_main_pic=#{acaMainPic}, aca_content=#{acaContent}, usr_id=#{userVO.usrId}
		where aca_no = #{acaNo}
	</update>
	<delete id="deleteAcademy" parameterType="string">
		delete from academy where aca_no = #{value}
	</delete>
	<select id="getAcademyList" resultType="academyVO">
		select aca_no,aca_name from academy
	</select>
	<select id="getAcademyByAcaNo" parameterType="string" resultType="academyVO">
		select aca_name from academy where aca_no = #{value}
	</select>
	<insert id="registerAcademyFile" parameterType="acaAttachFileVO" >
		insert into aca_attach_file(aca_att_no,aca_filepath,aca_no)
		values(aca_attach_file_seq.nextval,#{acaFilepath},#{academyVO.acaNo})
	</insert>
	<update id="updateAcademyFile" parameterType="acaAttachFileVO">
		update aca_attach_file
		set
		aca_filepath=#{acaFilepath} where aca_att_no=#{acaAttNo}
	</update>
</mapper>